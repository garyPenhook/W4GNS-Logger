still 6 ═════════════════════════════════════════════════════════════════════════════
KEY TYPE FIELD - QUICK START GUIDE
W4GNS Logger SKCC Integration
═════════════════════════════════════════════════════════════════════════════

DROPDOWN VALUES:
────────────────
STRAIGHT    → Straight Key (default)
BUG         → Semi-Automatic Key (Bug)
SIDESWIPER  → Sideswiper/Cootie

DATABASE FIELD:
───────────────
Model:     Contact
Field:     key_type
Type:      String(20)
Default:   "STRAIGHT"
Location:  src/database/models.py:76

CONSTANTS MODULE:
─────────────────
File:      src/database/constants.py

Import:    from src.database.constants import KEY_TYPE_CHOICES

KEY_TYPE_CHOICES = [
    ("STRAIGHT", "Straight Key"),
    ("BUG", "Semi-Automatic Key (Bug)"),
    ("SIDESWIPER", "Sideswiper (Cootie)"),
]

REPOSITORY METHODS:
───────────────────

1. Get contacts by key type:
   repo.get_contacts_by_key_type("STRAIGHT")

2. Get key type statistics:
   stats = repo.get_key_type_statistics()
   # Returns: {straight_key, bug, sideswiper, total_key_contacts}

3. Search by key type + band:
   repo.search_contacts_by_key_type_and_band("BUG", band="40M")

4. Triple Key Award progress:
   progress = repo.get_triple_key_progress()
   # Returns: counts for each key type, qualification status

5. Triple Key for specific callsign:
   repo.get_triple_key_progress(callsign="W5XYZ")

USAGE EXAMPLE:
──────────────

# Create contact
contact = Contact(
    callsign="W5XYZ",
    qso_date="20241021",
    time_on="1430",
    band="40M",
    mode="CW",
    key_type="STRAIGHT"  ← Select from dropdown
)
repo.add_contact(contact)

# Query
straight_contacts = repo.get_contacts_by_key_type("STRAIGHT")
stats = repo.get_key_type_statistics()

GUI DROPDOWN:
─────────────

HTML:
  <select name="key_type">
    <option value="STRAIGHT" selected>Straight Key</option>
    <option value="BUG">Semi-Automatic Key (Bug)</option>
    <option value="SIDESWIPER">Sideswiper (Cootie)</option>
  </select>

PyQt:
  from src.database.constants import KEY_TYPE_CHOICES
  combo = QComboBox()
  for code, display_name in KEY_TYPE_CHOICES:
      combo.addItem(display_name, code)

INDEXES:
────────
idx_key_type
idx_key_type_band_mode
idx_skcc_key_type

TRIPLE KEY AWARD:
─────────────────
Requires: 300 QSOs using all 3 key types
Query:    repo.get_triple_key_progress()
Returns:  Dict with qualification status

DOCUMENTATION:
───────────────
Full Guide: docs/KEY_TYPE_FIELD.md

KEY DESCRIPTIONS:
──────────────────

STRAIGHT KEY
• Traditional mechanical key with spring return
• Manual creation of both dots and dashes
• Most skill required, most authentic SKCC experience

BUG
• Semi-automatic key with automatic dot generation
• Horizontal paddle creates dots via oscillation
• Manual dashes via lever motion
• Intermediate skill level, popular for SKCC

SIDESWIPER (COOTIE)
• Horizontal lever key for side-to-side motion
• Creates dots and dashes through lever motion
• Advanced technique, requires practice
• Most efficient operation, used by experienced operators

═════════════════════════════════════════════════════════════════════════════
